export {}
/*
+ –ø–æ–ø—Ä–æ–±—É–π –Ω–∞ —ç—Ç–æ–º api —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:
1. –≤–≤–æ–¥–∏—à—å —Ç–µ–∫—Å—Ç
2. –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –∏—â–µ—à—å —à—É—Ç–∫—É –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
3. –µ—Å–ª–∏ —Ç–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç, –∏—â–µ—à—å —à—É—Ç–∫—É –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –ø–æ–∏—Å–∫—É
*/

const findCategoryJoke = async (category: string): Promise<string>  => {
	const response = await fetch(`https://api.chucknorris.io/jokes/random?category=${category}`)
	const json = await response.json()
	const { value } = json as { value: string}
	return value
}

const chuckNorrisJokes = async (input: string): Promise<string> => {
	const searchCategory = await findCategoryJoke(input)
	if (searchCategory.includes(input)) {
		return findCategoryJoke(input)
	} else {
		throw Error("—Ç–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç, –ø–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é")
	}
}

chuckNorrisJokes('animal')
	.then( joke => console.log("üöÄ ~ joke:", joke))
	.catch( error => console.log("üöÄ ~ error:", error))