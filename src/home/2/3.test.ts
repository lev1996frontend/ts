import { testScript, test } from "../../tests";


// testScript(__dirname, '../1/1.ts',[
//   {
//     description: 'яблоко',
//     // skip: true,
//     // only: true, // TODO
//     input: ['яблоко'],
//     print: ['Думаю ваши любимые фрукты: яблоко'],
//   },
//   {
//     description: 'груша',
//     input: ['груша'],
//     print: ['Думаю ваши любимые фрукты: груша'],
//   },
// ])

testScript(__dirname, '3.test.ts', [
  // 4 варианта?
  {
    description: '3 атакующих',
    input: [3,1,1],
    print: [
      'Атакующий: 2 + 2 + 2 = 6 (-1 юнита)',
      'Обороняющийся:  6 очков(1 крепости) + 2 = 8 (-1 юнита)'
    ],
    // random: [2]
  },
  {
    description: '0 легионов, 2 крепости',
    input: [3, 0, 2],
    print: [
      'Атакующий: 2 + 2 + 2 = 6 (-1 юнита)',
      'Обороняющийся: 12 = 12 (-2 юнита)'
    ],
    // random:[2]
    // random:[2,2,2] // TODO: проверить
  },
])


// const tests = ['test 1', 'test 2']

// describe('test', () => {
//   tests.forEach(t => {
//     test(t, () => {})
//   })
// })

// testScript(__dirname, '2.3.test.ts', [
//   test('3 атакующих, 1 легион, 1 крепость')
//     .input('Введите количество атакующих легионеров: ', 3)
//     .input('Введите количество легионов в провинции: ', 1)
//     .input('Введите количество крепостей в провинции: ', 1)
//     .random(2)
//     .print('Атакующий: 2 + 2 + 2 = 6 (-1 юнита)',
//     'Обороняющийся: 6 очков(1 крепости) + 2 = 8 (-1 юнита)')
//     .build(),

//   test('3 атакующих, 0 легионов, 2 крепости')
//     .input('Введите количество атакующих легионеров: ', 3)
//     .input('Введите количество легионов в провинции: ', 0)
//     .input('Введите количество крепостей в провинции: ', 2)
//     .random(6)
//     .print('Атакующий: 6 + 1 + 6 = 13 (-2 юнита)',
//     'Обороняющийся: 12 очков(2 крепости) + 0 = 12 (-2 юнита)')
//     .build(),

//   test('0 атакующих')
//     .input('Введите количество атакующих легионеров: ', 0)
//     .input('Введите количество легионов в провинции: ', 1)
//     .input('Введите количество крепостей в провинции: ', 1)
//     .print('Некорректные данные, повторите попытку')
//     .build(),

//   test('-1 легион')
//     .input('Введите количество атакующих легионеров: ', 0)
//     .input('Введите количество легионов в провинции: ', -1)
//     .input('Введите количество крепостей в провинции: ', 1)
//     .print('Некорректные данные, повторите попытку')
//     .build(),

//   test('-1 крепость')
//     .input('Введите количество атакующих легионеров: ', 0)
//     .input('Введите количество легионов в провинции: ', 1)
//     .input('Введите количество крепостей в провинции: ', -1)
//     .print('Некорректные данные, повторите попытку')
//     .build(),

//   test('Максимальные значения')
//     .input('Введите количество атакующих легионеров: ', 10)
//     .input('Введите количество легионов в провинции: ', 10)
//     .input('Введите количество крепостей в провинции: ', 10)
//     .random(6)
//     .print('Атакующий: 6 + 6 + 6 + 6 + 6 + 6 + 6 + 6 + 6 + 6 = 60 (-2 юнита)',
//     'Обороняющийся: 60 очков(10 крепостей) + 60 = 120 (-12 юнитов)')
//     .build(),
// ]);

// testScript(__dirname, '2.3.test.ts', [
//   // 4 варианта?
//   {
//     description: '3 атакующих',
//     input: [3,1,1],
//     print: [
//       'Атакующий: 2 + 2 + 2 = 6 (-1 юнита)',
//       'Обороняющийся:  6 очков(1 крепости) + 2 = 8 (-1 юнита)'
//     ],
//     random: [2]
//   },
//   {
//     description: '0 легионов, 2 крепости',
//     input: [3, 0, 2],
//     print: [
//       'Атакующий: 2 + 2 + 2 = 6 (-1 юнита)',
//       'Обороняющийся: 12 = 12 (-2 юнита)'
//     ],
//     random:[2]
//     // random:[2,2,2] // TODO: проверить
//   },
// ])```


//   {
//     description: '0 атакующих',
//     input: [0, 1, 1],
//     print: ['Некорректные данные, повторите попытку']
//   },
//   {
//     description: '-1 легион',
//     input: [0, -1, 1],
//     print: ['Некорректные данные, повторите попытку']
//   },
//   {
//     description: '-1 крепость',
//     input: [0, 1, -1],
//     print: ['Некорректные данные, повторите попытку']
//   },
//   // max а/о/к
// ])
